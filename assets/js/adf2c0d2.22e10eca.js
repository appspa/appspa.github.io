"use strict";(self.webpackChunkappspace_docs=self.webpackChunkappspace_docs||[]).push([[596],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),d=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=d(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,p=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=d(t),m=r,f=u["".concat(i,".").concat(m)]||u[m]||c[m]||p;return t?a.createElement(f,o(o({ref:n},l),{},{components:t})):a.createElement(f,o({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var p=t.length,o=new Array(p);o[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<p;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9726:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>s,toc:()=>i});var a=t(7462),r=(t(7294),t(3905));const p={sidebar_label:"Fastlane"},o="Fastlane\u914d\u7f6e",s={unversionedId:"developer-guide/fastlane",id:"developer-guide/fastlane",isDocsHomePage:!1,title:"Fastlane\u914d\u7f6e",description:"`",source:"@site/docs/developer-guide/fastlane.md",sourceDirName:"developer-guide",slug:"/developer-guide/fastlane",permalink:"/docs/developer-guide/fastlane",editUrl:"https://github.com/appspa/appspa.github.io/tree/mian/docs/developer-guide/fastlane.md",tags:[],version:"current",frontMatter:{sidebar_label:"Fastlane"},sidebar:"developerGuide",previous:{title:"Railway",permalink:"/docs/developer-guide/railway"},next:{title:"Android",permalink:"/docs/developer-guide/android-sdk"}},i=[],d={toc:i},l="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(l,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fastlane\u914d\u7f6e"},"Fastlane\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n\n\ndefault_platform(:android)\n\nplatform :android do\n\n     desc \"\u5b89\u5353\u6d4b\u8bd5\u5305\"\n     lane :debug do |option|\n     # python3 run.py -p common -b devDebug\n     # python3 run.py -p common -b release\n      puts \"\u6253\u5305\u4e2d...\"\n     # gradle(task:'clean')\n     # gradle(\n     #        task: 'assemble',\n     #        build_type: 'Debug',\n     # )\n      wordDir = File.expand_path(\"..\",Dir.pwd)\n      puts \"wordDir= #{wordDir}\"\n     # sh(\"cd #{wordDir} && python3 run.py -p common -b devDebug\");\n     sh(\"cd #{wordDir} && ./gradlew  :app:assembleCommonDevdebug\");\n      data = app_push_android({\n         'endpoint':'http:127.0.0.1',\n         'apikey':'67a3b53271e1b809c042b6b8ec73e0112',\n         'appMatch':'/build/app/outputs/**/*.apk',\n         'appId':'644b336a7d2b38001ed53dc2',\n         'changeLog':option[:l]||'\u81ea\u52a8\u5316\u6253\u5305'\n        }\n      )\n      updateAt = Time.new.strftime(\"%m-%d %H:%M:%S\")\n      dingTalk_push({\n        'ding_access_token':'69c7eaae7894a37580c793fe2c018da06ef7f79814870e869aede9673d3afa01',\n        'qrcode_url':\"#{data['qrcodeUrl']}\",\n        'install_url':\"#{data['installUrl']}\",\n        'web_url':'http:127.0.0.1/z9qs31',\n        'title':'APP\u6d4b\u8bd5\u5305\ud83d\ude80\ud83d\ude80\ud83d\ude80',\n        'text':\"\u7248\u672c\u4fe1\u606f\uff1a#{data['versionName']}_#{data['versionCode']} \\n\\n \u6253\u5305\u65f6\u95f4\uff1a#{updateAt}\\n\\n \u66f4\u65b0\u8bf4\u660e\uff1a#{data['changeLog']}\",\n      })\n      notification(app_icon:\"./fastlane/logo.png\",title:\"LoanManager\",subtitle: \"APK\u4e0a\u4f20\u6210\u529f\", message: \"\u81ea\u52a8\u6253\u5305\u5b8c\u6210\uff01\")\n     end\n\n     def app_push_android(params)\n       rep = app_push({\n          'endpoint':params[:endpoint] ,\n          'apikey':params[:apikey],\n          'appMatch':'/build/app/outputs/**/*.apk',\n          'appId':params[:appId],\n          'platform':'android',\n          'changeLog':params[:changeLog]||'\u81ea\u52a8\u5316\u6253\u5305'\n        })\n#         puts \"installUrl=#{rep['data']['installUrl']}\"\n        return rep['data']\n     end\n     def app_push(params)\n        endpoint = params[:endpoint]\n        base_url = \"#{endpoint}/api/apps/upload\"\n        cur_dir = File.expand_path(\"..\",Dir.pwd)\n        appMatch = params[:appMatch]\n        app_path = Dir[\"#{cur_dir}#{appMatch}\"].last\n        puts \"app_path: #{app_path}\"\n        form = [\n          [\"appId\",params[:appId]],\n          [\"file\",File.open(app_path)],\n          [\"active\",params[:active]||\"true\"],\n          [\"changeLog\",params[:changeLog]||'\u81ea\u52a8\u5316\u6253\u5305'],\n          [\"updateMode\",params[:updateMode]||'normal'],\n          [\"platform\",params[:platform]||'android']\n        ]\n        uri = URI.parse(base_url)\n        https = Net::HTTP.new(uri.host, uri.port)\n        https.use_ssl = false\n        request = Net::HTTP::Post.new(uri.request_uri)\n        request.add_field('Content-Type', 'multipart/form-data')\n        request.add_field('apikey', params[:apikey])\n        request.set_form form,'multipart/form-data'\n        response = https.request(request)\n        puts \"------------\u4e0a\u4f20AppSpace------------------\"\n        puts \"App Space Response #{response.code} #{response.message}: #{response.body}\"\n        return JSON.parse(response.body)\n     end\n     def dingTalk_push(params)\n         ding_access_token = params[:ding_access_token]\n         qrcode_url = params[:qrcode_url]\n         install_url = params[:install_url]\n         web_url = params[:web_url]\n         title = params[:title]\n         text = params[:text]\n         dingTalk_url = \"https://oapi.dingtalk.com/robot/send?access_token=#{ding_access_token}\"\n         puts \"install_url = #{install_url}\"\n         markdown = {\n           \"msgtype\": \"actionCard\",\n           \"actionCard\": {\n               \"title\": \"#{title}\",\n               \"text\": \"### #{title} \\n\\n![screenshot](#{qrcode_url}) \\n #{text}\",\n               \"btnOrientation\": \"0\",\n               \"btns\": [\n                   {\n                       \"title\": \"\u70b9\u51fb\u5b89\u88c5\",\n                       \"actionURL\": install_url\n                   },\n                   {\n                       \"title\": \"\u67e5\u770b\u66f4\u591a\",\n                       \"actionURL\": web_url\n                   }\n               ]\n           }\n         }\n         uri = URI.parse(dingTalk_url)\n         https = Net::HTTP.new(uri.host, uri.port)\n         https.use_ssl = true\n\n         request = Net::HTTP::Post.new(uri.request_uri)\n         request.add_field('Content-Type', 'application/json')\n         request.body = markdown.to_json\n\n         response = https.request(request)\n         puts \"------------\u9489\u9489\u901a\u77e5------------------\"\n         puts \"Response #{response.code} #{response.message}: #{response.body}\"\n     end\nend\n")))}u.isMDXComponent=!0}}]);